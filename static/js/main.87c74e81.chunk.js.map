{"version":3,"sources":["components/Header/HeaderContent.tsx","components/Card/StaticCard.tsx","components/Card/AnimatedCard.tsx","components/FlipClock/FlipUnitContainer.tsx","components/FlipClock/FlipClock.tsx","App.tsx","index.js"],"names":["Header","StaticCard","props","className","position","digit","AnimatedCard","animation","FlipUnitContainer","currentDigit","toString","previousDigit","unit","parseInt","digit1","shuffle","digit2","animation1","animation2","FlipClock","timerID","useState","hours","setHours","hoursShuffle","setHoursShuffle","minutes","setMinutes","minutesShuffle","seconds","setSeconds","secondsShuffle","setSecondsShuffle","useEffect","setInterval","updateTime","clearInterval","time","Date","currentMinutes","getMinutes","currentSeconds","getSeconds","currentHours","getHours","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAS,WAClB,OACI,iCACE,qD,OCEGC,G,kBAAsD,SAACC,GAChE,OACE,qBAAKC,UAAS,yBAAoBD,EAAME,UAAxC,SACE,+BAAOF,EAAMG,YCHRC,G,MAA0D,SAACJ,GACpE,OACI,qBAAKC,UAAS,2BAAsBD,EAAMK,WAA1C,SACI,+BAAOL,EAAMG,YCAZG,EAA6D,SAACN,GAEvE,IAAIO,EAAwBP,EAAMG,MAAOK,WACrCC,GAAyBT,EAAMG,MAAQ,GAAGK,WAI5CC,EADiB,UAAfT,EAAMU,KAC0B,OAAlBD,EAAyB,KAAOA,EAEd,OAAlBA,EAAyB,KAAOA,EAI9CE,SAASJ,GAAgB,KAC3BA,EAAY,WAAOA,IAEjBI,SAASF,GAAiB,KAC5BA,EAAa,WAAOA,IAItB,IAAMG,EAASZ,EAAMa,QAAUJ,EAAgBF,EACzCO,EAAUd,EAAMa,QAA0BN,EAAhBE,EAG1BM,EAAaf,EAAMa,QAAU,OAAS,SACtCG,EAAchB,EAAMa,QAAmB,SAAT,OAEpC,OACI,mCACE,sBAA6BZ,UAAW,oBAAxC,UACE,cAAC,EAAD,CAAYC,SAAU,YAAaC,MAAOI,IAC1C,cAAC,EAAD,CAAYL,SAAU,YAAaC,MAAOM,IAC1C,cAAC,EAAD,CAAcN,MAAOS,EAAQP,UAAWU,IACxC,cAAC,EAAD,CAAcZ,MAAOW,EAAQT,UAAWW,MAJ1C,UAAaT,OCpCVU,EAA+B,WAAO,IAU3CC,EAV0C,EACpBC,mBAAS,GADW,mBACvCC,EADuC,KAChCC,EADgC,OAENF,oBAAS,GAFH,mBAEvCG,EAFuC,KAEzBC,EAFyB,OAIhBJ,mBAAS,GAJO,mBAIvCK,EAJuC,KAI9BC,EAJ8B,OAKFN,oBAAS,GALP,mBAKvCO,EALuC,aAOhBP,mBAAS,IAPO,mBAOvCQ,EAPuC,KAO9BC,EAP8B,OAQFT,oBAAS,GARP,mBAQvCU,EARuC,KAQvBC,EARuB,KAY9CC,qBAAU,WAKN,OAJAb,EAAUc,aAAY,WACpB,OAAOC,MACN,IAEI,WACHC,cAAchB,MAEnB,IAEH,IAAMe,EAAa,WACjB,IAAME,EAAO,IAAIC,KACXC,EAAiBF,EAAKG,aACtBC,EAAiBJ,EAAKK,aACxBC,EAAeN,EAAKO,WAAa,IACrCD,EAAeA,GAA8B,MAExBrB,IACnBC,EAASoB,GACTlB,GAAiBD,IAEfe,IAAmBb,IACrBC,EAAWY,GACXP,GAAmBD,IAGjBU,IAAmBZ,IACrBC,EAAWW,GACXT,GAAmBD,KAIvB,OACI,mCACI,sBAAK5B,UAAW,YAAhB,UACI,cAAC,EAAD,CACIS,KAAM,QACNP,MAAOiB,EACPP,QAASS,IAEb,cAAC,EAAD,CACIZ,KAAM,UACNP,MAAOqB,EACPX,QAASa,IAEb,cAAC,EAAD,CACIhB,KAAM,UACNP,MAAOwB,EACPd,QAASgB,UCnDZc,EATc,WAC3B,OACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCLR2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87c74e81.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './HeaderContent.scss';\r\nimport { FunctionComponent } from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n          <h1>React Flip Clock</h1>\r\n        </header>\r\n    );\r\n};","import * as React from 'react';\r\nimport './StaticCard.scss';\r\nimport { FunctionComponent } from 'react';\r\n\r\nexport interface StaticCardItemProps {\r\n    position: string;\r\n    digit: String;\r\n}\r\n\r\nexport const StaticCard : FunctionComponent<StaticCardItemProps> = (props: StaticCardItemProps) => {\r\n    return (\r\n      <div className={`StaticFlipCard ${props.position}`}>\r\n        <span>{props.digit}</span>\r\n      </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './AnimatedCard.scss';\r\nimport { FunctionComponent } from 'react';\r\n\r\nexport interface AnimatedCardItemProps {\r\n    animation: string;\r\n    digit: string;\r\n}\r\n\r\nexport const AnimatedCard : FunctionComponent<AnimatedCardItemProps> = (props: AnimatedCardItemProps) => {\r\n    return (\r\n        <div className={`AnimatedFlipCard ${props.animation}`}>\r\n            <span>{props.digit}</span>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport './FlipUnitContainer.scss';\r\nimport { FunctionComponent } from 'react';\r\nimport { StaticCard } from '../Card/StaticCard';\r\nimport { AnimatedCard } from '../Card/AnimatedCard';\r\n\r\ninterface FlipUpContainerProps {\r\n    digit: number,\r\n    unit: string,\r\n    shuffle: boolean,\r\n}\r\n\r\nexport const FlipUnitContainer: FunctionComponent<FlipUpContainerProps> = (props: FlipUpContainerProps) => {\r\n    // assign digit values\r\n    let currentDigit: string = (props.digit).toString();\r\n    let previousDigit: string = (props.digit - 1).toString();\r\n\r\n    // to prevent a negative value\r\n    if (props.unit !== \"hours\") {\r\n      previousDigit = previousDigit === '-1' ? '59' : previousDigit;\r\n    } else {\r\n      previousDigit = previousDigit === '-1' ? '12' : previousDigit;\r\n    }\r\n  \r\n    // add zero\r\n    if (parseInt(currentDigit) < 10) {\r\n      currentDigit = `0${currentDigit}`;\r\n    }\r\n    if (parseInt(previousDigit) < 10) {\r\n      previousDigit = `0${previousDigit}`;\r\n    }\r\n  \r\n    // shuffle digits\r\n    const digit1 = props.shuffle ? previousDigit : currentDigit;\r\n    const digit2 = !props.shuffle ? previousDigit : currentDigit;\r\n  \r\n    // shuffle animations\r\n    const animation1 = props.shuffle ? \"fold\" : \"unfold\";\r\n    const animation2 = !props.shuffle ? \"fold\" : \"unfold\";\r\n  \r\n    return (\r\n        <>\r\n          <div key={`${currentDigit}`} className={\"flipUnitContainer\"}>\r\n            <StaticCard position={\"upperCard\"} digit={currentDigit} />\r\n            <StaticCard position={\"lowerCard\"} digit={previousDigit} />\r\n            <AnimatedCard digit={digit1} animation={animation1} />\r\n            <AnimatedCard digit={digit2} animation={animation2} />\r\n          </div>\r\n        </>\r\n      );\r\n  };","import * as React from 'react';\r\nimport './FlipClock.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport { FlipUnitContainer } from '../FlipClock/FlipUnitContainer'\r\n\r\nexport const FlipClock: FunctionComponent = () => {\r\n    const [hours, setHours] = useState(0);\r\n    const [hoursShuffle, setHoursShuffle] = useState(true);\r\n\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [minutesShuffle, setMinutesShuffle] = useState(true);\r\n\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [secondsShuffle, setSecondsShuffle] = useState(true);\r\n\r\n    let timerID: any;\r\n\r\n    useEffect(() => {\r\n        timerID = setInterval(() => {\r\n          return updateTime();\r\n        }, 50);\r\n        \r\n        return () => {\r\n            clearInterval(timerID);\r\n        }\r\n    }, []);\r\n  \r\n    const updateTime = () => {\r\n      const time = new Date();\r\n      const currentMinutes = time.getMinutes();\r\n      const currentSeconds = time.getSeconds();\r\n      let currentHours = time.getHours() % 12;\r\n      currentHours = currentHours ? currentHours : 12;\r\n  \r\n      if (currentHours !== hours) {\r\n        setHours(currentHours);\r\n        setHoursShuffle(!hoursShuffle);\r\n      }\r\n      if (currentMinutes !== minutes) {\r\n        setMinutes(currentMinutes);\r\n        setSecondsShuffle(!secondsShuffle);\r\n      }\r\n\r\n      if (currentSeconds !== seconds) {\r\n        setSeconds(currentSeconds);\r\n        setSecondsShuffle(!secondsShuffle);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={\"flipClock\"}>\r\n                <FlipUnitContainer\r\n                    unit={\"hours\"}\r\n                    digit={hours}\r\n                    shuffle={hoursShuffle}\r\n                />\r\n                <FlipUnitContainer\r\n                    unit={\"minutes\"}\r\n                    digit={minutes}\r\n                    shuffle={minutesShuffle}\r\n                />\r\n                <FlipUnitContainer\r\n                    unit={\"seconds\"}\r\n                    digit={seconds}\r\n                    shuffle={secondsShuffle}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport './App.scss';\r\nimport { Header } from './components/Header/HeaderContent';\r\nimport { FlipClock } from './components/FlipClock/FlipClock';\r\n\r\nconst App: FunctionComponent = () => {\r\n    return (\r\n      <div className='App'>\r\n        <Header/>\r\n        <FlipClock/>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}