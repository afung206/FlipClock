// function component
const AnimatedCard = ({ animation, digit, middayText }) => {
  return (
    <div className={`flipCard ${animation}`}>
      <span>{middayText} {digit}</span>
    </div>
  );
};

// function component
const StaticCard = ({ position, midday, digit }) => {
  return (
    <div className={position}>
      <span>{midday} {digit}</span>
    </div>
  );
};

// function component
const FlipUnitContainer = ({ digit, shuffle, unit, midday }) => {
  // assign digit values
  let currentDigit = digit;
  let previousDigit = digit - 1;

  // to prevent a negative value
  if (unit !== "hours") {
    previousDigit = previousDigit === -1 ? 59 : previousDigit;
  } else {
    previousDigit = previousDigit === -1 ? 23 : previousDigit;
  }

  // add zero
  if (currentDigit < 10) {
    currentDigit = `0${currentDigit}`;
  }
  if (previousDigit < 10) {
    previousDigit = `0${previousDigit}`;
  }

  // shuffle digits
  const digit1 = shuffle ? previousDigit : currentDigit;
  const digit2 = !shuffle ? previousDigit : currentDigit;

  // shuffle animations
  const animation1 = shuffle ? "fold" : "unfold";
  const animation2 = !shuffle ? "fold" : "unfold";

  if (unit === "hours") {
    const middayText = midday ? "PM" : "AM";
    return (
      <div className={"flipUnitContainer"}>
        <StaticCard position={"upperCard"} digit={currentDigit} />
        <StaticCard
          position={"lowerCard"}
          midday={middayText}
          digit={previousDigit}
        />
        <AnimatedCard digit={digit1} animation={animation1} />
        <AnimatedCard digit={digit2} midday={middayText} animation={animation2} />
      </div>
    );
  } else {
    return (
      <div className={"flipUnitContainer"}>
        <StaticCard position={"upperCard"} digit={currentDigit} />
        <StaticCard position={"lowerCard"} digit={previousDigit} />
        <AnimatedCard digit={digit1} animation={animation1} />
        <AnimatedCard digit={digit2} animation={animation2} />
      </div>
    );
  }
};

// class component
class FlipClock extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      hours: 0,
      hoursShuffle: true,
      minutes: 0,
      minutesShuffle: true,
      seconds: 0,
      secondsShuffle: true,
      midday: false
    };
  }

  componentDidMount() {
    this.timerID = setInterval(() => this.updateTime(), 50);
  }

  componentWillUnmount() {
    clearInterval(this.timerID);
  }

  updateTime() {
    // get new date
    const time = new Date();
    // set time units
    const minutes = time.getMinutes();
    const seconds = time.getSeconds();
    let hours = time.getHours() % 12;
    let midday = hours > 12 ? true : false;
    hours = hours ? hours : 12;

    // on hour chanage, update hours and shuffle state
    if (hours !== this.state.hours) {
      const hoursShuffle = !this.state.hoursShuffle;
      this.setState({
        hours,
        hoursShuffle
      });
    }
    // on minute chanage, update minutes and shuffle state
    if (minutes !== this.state.minutes) {
      const minutesShuffle = !this.state.minutesShuffle;
      this.setState({
        minutes,
        minutesShuffle
      });
    }
    // on second chanage, update seconds and shuffle state
    if (seconds !== this.state.seconds) {
      const secondsShuffle = !this.state.secondsShuffle;
      this.setState({
        seconds,
        secondsShuffle
      });
    }

    if (midday !== this.state.midday) {
      this.setState({
        midday: midday
      });
    }
  }

  render() {
    // state object destructuring
    const {
      hours,
      minutes,
      seconds,
      hoursShuffle,
      minutesShuffle,
      secondsShuffle,
      midday,
    } = this.state;

    return (
      <div className={"flipClock"}>
        <FlipUnitContainer
          unit={"hours"}
          digit={hours}
          shuffle={hoursShuffle}
          midday={midday}
        />
        <FlipUnitContainer
          unit={"minutes"}
          digit={minutes}
          shuffle={minutesShuffle}
        />
        <FlipUnitContainer
          unit={"seconds"}
          digit={seconds}
          shuffle={secondsShuffle}
        />
      </div>
    );
  }
}

// function component
const Header = () => {
  return (
    <header>
      <h1>React Flip Clock (12 Hour)</h1>
    </header>
  );
};

// function component
const App = () => {
  return (
    <div>
      <Header />
      <FlipClock />
    </div>
  );
};

ReactDOM.render(<App />, document.querySelector("#app"));
